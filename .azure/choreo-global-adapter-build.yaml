resources:
  repositories:
    - repository: choreo-product-apim
      type: github
      name: wso2-enterprise/choreo-product-apim
      endpoint: choreo-cicd
      ref: refs/heads/main

    - repository: common-templates
      type: github
      name: wso2-enterprise/choreo-common-pipeline-templates
      endpoint: choreo-cicd

trigger:
  branches:
    include:
      - main

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: 'choreo-apim-ga-sb'

  - name: MAVEN_CACHE_FOLDER
    value: $(Pipeline.Workspace)/.m2/repository

  - name: MAVEN_OPTS
    value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

  - name: CONTAINER_REGISTRY
    value: 'choreocontrolplane.azurecr.io'

jobs:
  - job: UnitTestsAndCoverage
    displayName: 'Unit Tests and Coverage'
    steps:
      - template: templates/run-unit-tests.yaml
  - template: templates/choreo-apim-test-util-build.yaml
  - template: templates/choreo-ga-build.yaml

  - job: PublishChoreoGADockerImage
    dependsOn: BuildChoreoGlobalAdapter

    variables:
      GLOBAL_ADAPTER_REPOSITORY: choreoipaas/choreo-connect-global-adapter
      GLOBAL_ADAPTER_VERSION: ''

    steps:
      - script: |
          APP_REVISION="$(Build.SourceBranchName)-$(Build.SourceVersion)"
          echo "APP_REVISION: ${APP_REVISION}"
          echo "##vso[task.setvariable variable=APP_REVISION]${APP_REVISION}"
        displayName: 'Get last commit id'

      - task: DownloadPipelineArtifact@2
        displayName: 'Download GA Docker image'
        inputs:
            artifactName: 'GADockerImage'
            path: '$(Pipeline.Workspace)/docker'

      - script: |
          docker load -i $(Pipeline.Workspace)/docker/choreo-ga.tar
        displayName: 'Restore GA Docker image'

      - script: |
          echo "##vso[task.setvariable variable=GLOBAL_ADAPTER_VERSION]$(cat pom.xml |
          grep -m1 "<version" | cut -d ">" -f2 | cut -d "<" -f1)"
        displayName: 'Retrieve GA component versions'

      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry: 'wso2choreo-control-plane-acr'

      - script: |
          docker tag wso2/choreo-connect-global-adapter:$(GLOBAL_ADAPTER_VERSION) $(CONTAINER_REGISTRY)/$(GLOBAL_ADAPTER_REPOSITORY):$(APP_REVISION)
          docker tag wso2/choreo-connect-global-adapter:$(GLOBAL_ADAPTER_VERSION) $(CONTAINER_REGISTRY)/$(GLOBAL_ADAPTER_REPOSITORY):latest
        displayName: 'Tag Docker images to ACR repositories'

      - template: templates/trivy-docker-scan.yml
        parameters:
          repository: $(GLOBAL_ADAPTER_REPOSITORY)
          tag: $(APP_REVISION)
          registry: $(CONTAINER_REGISTRY)

      - task: Docker@2
        inputs:
          command: push
          containerRegistry: 'wso2choreo-control-plane-acr'
          repository: $(GLOBAL_ADAPTER_REPOSITORY)
          tags: |
            $(APP_REVISION)
            latest
          displayName: 'Push Global Adapter Docker image'

      - template: update-image-in-cp-overlays.yml@common-templates
        parameters:
          DOCKER_IMAGE_LIST:
            - ${{ variables.CONTAINER_REGISTRY }}/${{ variables.GLOBAL_ADAPTER_REPOSITORY }}:$(APP_REVISION)
