trigger: 
  branches:
    include:
    - predev

pr: none

resources:
  repositories:
  - repository: choreo-connect-global-adapter
    type: github
    name: wso2-enterprise/choreo-connect-global-adapter
    endpoint: choreo-cicd
    ref: predev
  - repository: common-templates
    type: github
    name: wso2-enterprise/choreo-common-pipeline-templates
    endpoint: choreo-cicd

jobs:
- job: ChoreoGlobalAdapterPredevRelease

  pool:
    vmImage: 'ubuntu-latest'
    
  variables:
    CONTAINER_REGISTRY: choreocontrolplane.azurecr.io
    GLOBAL_ADAPTER_REPOSITORY: choreoipaas/choreo-connect-global-adapter-predev
    CARBON_APIMGT_REPOSITORY: choreoipaas/choreo-product-apim
    ADAPTER_REPOSITORY: choreoipaas/choreo-mgw-adapter
    ENFORCER_REPOSITORY: choreoipaas/choreo-mgw-enforcer
    ROUTER_REPOSITORY: choreoipaas/choreo-mgw-router
    MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
    MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Drouter.image=$(CONTAINER_REGISTRY)/$(ADAPTER_REPOSITORY)
    :latest -Denforcer.image=$(CONTAINER_REGISTRY)/$(ENFORCER_REPOSITORY):latest -Dadapter.image=$
    (CONTAINER_REGISTRY)/$(ROUTER_REPOSITORY):latest'
    GLOBAL_ADAPTER_VERSION: ''
    GIT_COMMIT_ID: ''

  steps:    

  - checkout: choreo-connect-global-adapter
    path: choreo-connect-global-adapter

  - script: |
      GIT_COMMIT="predev-$(git rev-parse HEAD)"
      echo "GIT_COMMIT_ID: ${GIT_COMMIT}"
      echo "##vso[task.setvariable variable=GIT_COMMIT_ID]${GIT_COMMIT}"
    displayName: Get last commit id
  - task: DockerInstaller@0
    inputs:
      dockerVersion: 17.09.0-ce
      releaseType: stable
    displayName: Docker Installer  

  - task: GoTool@0
    inputs:
      version: '1.16.2'
    displayName: Go Tool Installer

  - script: |
      sudo apt update
      sudo apt install golint
    displayName: Golint Installer
  - task: Cache@2
    inputs:
      key: 'maven | "$(Agent.OS)" | **/pom.xml'
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: $(MAVEN_CACHE_FOLDER)
    displayName: Cache Maven local repo

  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: 'wso2choreo-control-plane-acr'

  - task: Docker@2
    inputs:
      command: pull
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(CARBON_APIMGT_REPOSITORY)
      tags: |
        latest
      displayName: 'Pull product-apimgt Docker image'

  - task: Docker@2
    inputs:
      command: pull
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(ADAPTER_REPOSITORY)
      tags: |
        latest
      displayName: 'Pull Adapter Docker image'

  - task: Docker@2
    inputs:
      command: pull
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(ENFORCER_REPOSITORY)
      tags: |
        latest
      displayName: 'Pull Enforcer Docker image'

  - task: Docker@2
    inputs:
      command: pull
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(ROUTER_REPOSITORY)
      tags: |
        latest
      displayName: 'Pull Router Docker image'

  - script: | 
      echo "##vso[task.setvariable variable=GLOBAL_ADAPTER_VERSION]$(cat $(Agent.BuildDirectory)/choreo-connect-global-adapter/pom.xml | 
      grep -m1 "<version" | cut -d ">" -f2 | cut -d "<" -f1)"
    displayName: Retrieve global adapter component versions
  - task: Maven@3
    inputs:
      mavenPomFile: '$(Agent.BuildDirectory)/choreo-connect-global-adapter/pom.xml'
      goals: 'clean install -P ReleaseWithResourcesGen -s .maven/settings.xml'
#      options: '-Dmaven.test.skip=true'
      mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'

  - script: |
      docker tag wso2/choreo-connect-global-adapter:$(GLOBAL_ADAPTER_VERSION) $(CONTAINER_REGISTRY)/$(GLOBAL_ADAPTER_REPOSITORY):$(GIT_COMMIT_ID)
    displayName: 'Tag docker images to ACR repositories'
  - task: Docker@2
    inputs:
      command: push
      containerRegistry: 'wso2choreo-control-plane-acr'
      repository: $(GLOBAL_ADAPTER_REPOSITORY)
      tags: |
        $(GIT_COMMIT_ID)
      displayName: 'Push Adapter Docker image'

  - template: update-predev-image-in-cp-overlays.yml@common-templates
    parameters:
      DOCKER_IMAGE_LIST:
      - ${{ variables.CONTAINER_REGISTRY }}/${{ variables.GLOBAL_ADAPTER_REPOSITORY }}:$(GIT_COMMIT_ID)

  - template: templates/trivy-docker-scan.yml
    parameters:
      repository: $(GLOBAL_ADAPTER_REPOSITORY)
      tag: $(GIT_COMMIT_ID)
      registry: $(CONTAINER_REGISTRY)
