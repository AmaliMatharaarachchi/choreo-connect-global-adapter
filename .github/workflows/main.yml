name: Global Adapter build

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Checkout choreo product apim repo
      uses: actions/checkout@v2
      with:
        repository: wso2-enterprise/choreo-product-apim
        path: integration/integration-artifacts/scripts/gen/choreo-apim/choreo-product-apim
        token: ${{ secrets.PRODUCT_APIM_PAT }}
    - name: Checkout choreo connect repo
      uses: actions/checkout@v2
      with:
        ref: choreo
        repository: wso2/product-microgateway
        path: integration/integration-artifacts/scripts/gen/choreo-connect/product-microgateway
        token: ${{ secrets.PRODUCT_APIM_PAT }}
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
      env:
        JAVA_8_HOME: "/opt/hostedtoolcache/Java_Adopt_jdk/8.0.292-1/x64"
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
      env:
        JAVA_11_HOME: "/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64"
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
          go-version: '1.18.x'
    - name: Setup Docker env
      run: |
          export DOCKER_COMPOSE_VERSION=1.23.2
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
          sudo rm /usr/local/bin/docker-compose
          curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin
          docker pull testcontainers/ryuk:0.3.0
          export `go env | grep GOPATH`
          export PATH="${GOPATH}/bin:${PATH}"
    - name: Setup Mongodb credentials
      run: |
        export MONGODB_CONNECTION_STRING="mongodb+srv://viraj:adminvirajg@cluster0.ngll6.mongodb.net/APIM_DB?retryWrites=true&amp;w=majority"
        export MONGODB_GROUP_ID="60e6bffe8b552c0152f94ba6"
        export MONGODB_CLUSTER_NAME="Cluster0"
        export MONGODB_PUBLIC_KEY="tajibnyf"
        export MONGODB_PRIVATE_KEY="24033628-c071-4bb5-af21-038d8c9c5775"
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: |
        export mongodb_connection_string="mongodb+srv://viraj:adminvirajg@cluster0.ngll6.mongodb.net/APIM_DB?retryWrites=true&amp;w=majority"
        export mongodb_group_id="60e6bffe8b552c0152f94ba6"
        export mongodb_cluster_name="Cluster0"
        export mongodb_public_key="tajibnyf"
        export mongodb_private_key="24033628-c071-4bb5-af21-038d8c9c5775"
        export IS_WORKFLOW_ENV="true"
        export JAVA_8_HOME="/opt/hostedtoolcache/Java_Adopt_jdk/8.0.292-1/x64"
        export JAVA_11_HOME="/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64"
        export PATH="${HOME}/go/bin:${PATH}"
        export GOFLAGS=-mod=mod
        mvn clean install -s .maven/settings.xml
